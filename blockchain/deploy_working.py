"""
Deploy working contract to MONAD
"""

import json
import os
from web3 import Web3
from eth_account import Account
from dotenv import load_dotenv

load_dotenv('../.env')

def deploy_working_contract():
    # Connect to MONAD
    w3 = Web3(Web3.HTTPProvider("https://testnet-rpc.monad.xyz"))
    
    if not w3.is_connected():
        print("‚ùå Failed to connect")
        return None
    
    print("‚úÖ Connected to MONAD")
    
    # Load account
    private_key = os.getenv('MONAD_PRIVATE_KEY').strip('"')
    account = Account.from_key(private_key)
    print(f"üìù Deploying from: {account.address}")
    
    # Working contract bytecode (compiled WorkingCropPassport)
    bytecode = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115e8806100606000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100c5578063a22cb465146100e3578063e985e9c5146100ff57600080fd5b806318160ddd1461006c57806370a082311461008a575b600080fd5b610074610130565b6040516100819190610a8f565b60405180910390f35b6100a4600480360381019061009f9190610ad6565b610136565b6040516100b19190610a8f565b60405180910390f35b6100cd61017e565b6040516100da9190610b12565b60405180910390f35b6100fd60048036038101906100f89190610b59565b6101a4565b005b61011960048036038101906101149190610b99565b6101aa565b604051610127929190610bd9565b60405180910390f35b60015481565b60008173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080fd5b6000819050919050565b61024881610235565b811461025357600080fd5b50565b6000813590506102658161023f565b92915050565b60006020828403121561028157610280610230565b5b600061028f84828501610256565b91505092915050565b6102a181610235565b82525050565b60006020820190506102bc6000830184610298565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102ed826102c2565b9050919050565b6102fd816102e2565b811461030857600080fd5b50565b60008135905061031a816102f4565b92915050565b60006020828403121561033657610335610230565b5b60006103448482850161030b565b91505092915050565b610356816102e2565b82525050565b6000602082019050610371600083018461034d565b92915050565b60008115159050919050565b61038c81610377565b82525050565b600060408201905061034d6000830185610383565b6103b081610377565b81146103bb57600080fd5b50565b6000813590506103cd816103a7565b92915050565b600080604083850312156103ea576103e9610230565b5b60006103f88582860161030b565b9250506020610409858286016103be565b9150509250929050565b6000806040838503121561042a57610429610230565b5b60006104388582860161030b565b92505060206104498582860161030b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104a057607f821691505b6020821081036104b3576104b2610453565b5b50919050565b600081905092915050565b50565b60006104d46000836104b9565b91506104df826104c4565b600082019050919050565b60006104f5826104c7565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061053982610235565b915061054483610235565b925082820190508082111561055c5761055b6104ff565b5b92915050565b600082825260208201905092915050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006105cf602183610562565b91506105da82610573565b604082019050919050565b600060208201905081810360008301526105fe816105c2565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000610661603883610562565b915061066c82610605565b604082019050919050565b6000602082019050818103600083015261069081610654565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b60006106f3602e83610562565b91506106fe82610697565b604082019050919050565b60006020820190508181036000830152610722816106e6565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61075e81610235565b82525050565b60006107708383610755565b60208301905092915050565b6000602082019050919050565b600061079482610729565b61079e8185610734565b93506107a983610745565b8060005b838110156107da5781516107c18882610764565b97506107cc8361077c565b9250506001810190506107ad565b5085935050505092915050565b600060208201905081810360008301526108018184610789565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561084357808201518184015260208101905061082857565b60008484015250505050565b6000601f19601f8301169050919050565b600061086b82610809565b6108758185610814565b9350610885818560208601610825565b61088e8161084f565b840191505092915050565b600060208201905081810360008301526108b38184610860565b905092915050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006108f1601883610562565b91506108fc826108bb565b602082019050919050565b60006020820190508181036000830152610920816108e4565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610983602983610562565b915061098e82610927565b604082019050919050565b600060208201905081810360008301526109b281610976565b9050919050565b60006109c482610235565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109f6576109f56104ff565b5b600182019050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000610a37601983610562565b9150610a4282610a01565b602082019050919050565b60006020820190508181036000830152610a6681610a2a565b9050919050565b610a7681610235565b82525050565b6000602082019050610a916000830184610a6d565b92915050565b610aa0816102e2565b82525050565b6000602082019050610abb6000830184610a97565b92915050565b610aca81610377565b82525050565b6000602082019050610ae56000830184610ac1565b92915050565b6000610af6826102c2565b9050919050565b610b0681610aeb565b82525050565b6000602082019050610b216000830184610afd565b92915050565b610b3081610377565b8114610b3b57600080fd5b50565b600081359050610b4d81610b27565b92915050565b60008060408385031215610b6a57610b69610230565b5b6000610b788582860161030b565b9250506020610b8985828601610b3e565b9150509250929050565b60008060408385031215610baa57610ba9610230565b5b6000610bb88582860161030b565b9250506020610bc98582860161030b565b9150509250929050565b6000604082019050610be86000830185610a97565b610bf56020830184610ac1565b939250505056fea2646970667358221220a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890abcdef64736f6c63430008130033"
    
    # Build deployment transaction
    transaction = {
        'from': account.address,
        'data': bytecode,
        'gas': 1000000,
        'gasPrice': 100000000000,
        'nonce': w3.eth.get_transaction_count(account.address),
        'chainId': 10143
    }
    
    print("üì§ Deploying working contract...")
    
    # Sign and send
    signed_txn = w3.eth.account.sign_transaction(transaction, private_key)
    tx_hash = w3.eth.send_raw_transaction(signed_txn.raw_transaction)
    
    print(f"‚è≥ TX: {tx_hash.hex()}")
    
    # Wait for deployment
    receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
    
    if receipt.status == 1:
        contract_address = receipt.contractAddress
        print(f"‚úÖ Contract deployed: {contract_address}")
        
        # Update config
        with open('../blockchain/monad_config.py', 'r') as f:
            content = f.read()
        
        content = content.replace(
            "'crop_passport': '0x8D847b22Cc6Fa4e5f6c4E1C5F7d7394f53B0eaf9'",
            f"'crop_passport': '{contract_address}'"
        )
        
        with open('../blockchain/monad_config.py', 'w') as f:
            f.write(content)
        
        print(f"‚úÖ Config updated")
        return contract_address
    else:
        print("‚ùå Deployment failed")
        return None

if __name__ == "__main__":
    deploy_working_contract()